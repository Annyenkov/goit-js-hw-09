{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAEzBC,EAAQJ,EAAKC,KAAK,GAClBI,EAAOL,EAAKC,KAAK,GACjBK,EAASN,EAAKC,KAAK,GAyBzB,SAASM,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAEpBM,EAAO,CAAEP,WAAUS,MAAAR,MAEpBA,MAhCPS,QAAQC,IAAIb,EAAOc,OACnBpB,EAAKC,KAAKoB,iBAAiB,UAAU,SAACC,GACpCA,EAAIC,iBACJ,IAAIC,EAAW,EACXC,EAAaC,OAAOtB,EAAMgB,OAC9B,GAAIM,OAAOtB,EAAMgB,OAAS,GAAKM,OAAOrB,EAAKe,OAAS,EAClD,OAAOO,EAAA7B,GAAS8B,OAAOC,QAAQ,4BAEjC,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,EAAOc,MAAOU,GAAK,EAEpB,KADjBN,GAAY,KAEVC,GAAcC,OAAOrB,EAAKe,QAE5Bb,EAAciB,EAAUC,GACvBM,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUyB,EAAKD,EAALf,MACjBU,EAAA7B,GAAS8B,OAAOM,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAANF,EAAM,UAEvEG,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAU6B,EAAKL,EAALf,MAClBU,EAAA7B,GAAS8B,OAAOU,QAAQ,sBAAqCH,OAAf3B,EAAS,QAAY2B,OAANE,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\nconst delay = refs.form[0];\nconst step = refs.form[1];\nconst amount = refs.form[2];\n\nconsole.dir(amount.value)\nrefs.form.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  let position = 0;\n  let delayCount = Number(delay.value);\n  if (Number(delay.value) < 0 || Number(step.value) < 0) {\n    return Notiflix.Notify.warning('Numbers must be positive');\n  }\n  for (let i = 0; i < amount.value; i += 1) {\n    position += 1\n    if (position !== 1) {\n      delayCount += Number(step.value);\n    } \n    createPromise(position, delayCount)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n} )\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  })\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","console","dir","value","addEventListener","evt","preventDefault","position1","delayCount","Number","$parcel$interopDefault","Notify","warning","i","then","param","delay1","success","concat","catch","delay2","failure"],"version":3,"file":"03-promises.10d01ff4.js.map"}