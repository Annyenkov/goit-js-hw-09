{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAEzBC,EAAQJ,EAAKC,KAAK,GAClBI,EAAOL,EAAKC,KAAK,GACjBK,EAASN,EAAKC,KAAK,GAyBzB,SAASM,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAEpBM,EAAO,C,SAAEP,EAAUS,MAAAR,MAEpBA,MAhCPS,QAAQC,IAAIb,EAAOc,OACnBpB,EAAKC,KAAKoB,iBAAiB,UAAWC,IACpCA,EAAIC,iBACJ,IAAIC,EAAW,EACXC,EAAaC,OAAOtB,EAAMgB,OAC9B,GAAIM,OAAOtB,EAAMgB,OAAS,GAAKM,OAAOrB,EAAKe,OAAS,EAClD,OAAOO,EAAA7B,GAAS8B,OAAOC,QAAQ,4BAEjC,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,EAAOc,MAAOU,GAAK,EACrCN,GAAY,EACK,IAAbA,IACFC,GAAcC,OAAOrB,EAAKe,QAE5Bb,EAAciB,EAAUC,GACvBM,MAAK,EAACvB,SAAEA,EAAUS,MAAAe,MACjBL,EAAA7B,GAAS8B,OAAOK,QAAQ,uBAAqBzB,QAAiBwB,UAE/DE,OAAM,EAAC1B,SAAEA,EAAUS,MAAAkB,MAClBR,EAAA7B,GAAS8B,OAAOQ,QAAQ,sBAAoB5B,QAAe2B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\nconst delay = refs.form[0];\nconst step = refs.form[1];\nconst amount = refs.form[2];\n\nconsole.dir(amount.value)\nrefs.form.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  let position = 0;\n  let delayCount = Number(delay.value);\n  if (Number(delay.value) < 0 || Number(step.value) < 0) {\n    return Notiflix.Notify.warning('Numbers must be positive');\n  }\n  for (let i = 0; i < amount.value; i += 1) {\n    position += 1\n    if (position !== 1) {\n      delayCount += Number(step.value);\n    } \n    createPromise(position, delayCount)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  }\n} )\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  })\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","console","dir","value","addEventListener","evt","preventDefault","position1","delayCount","Number","$parcel$interopDefault","Notify","warning","i","then","delay1","success","catch","delay2","failure"],"version":3,"file":"03-promises.ef50fb3b.js.map"}